                                                     VECTORS
Vector is template class
Creation:

#include<vector>
  int main(){
    vector<int> *vp= new vector<int>();  //dynamic creation
    vector<int> v;                       //static creation
    
//Inserting elements:
  v.push_back(1);
  v.push_back(2);
  v.push_back(3);
  
  v[3]=4;                                //other way to insert values
  v[4]=5;
  
  v.push_back(6);
  v.push_back(7);
  
  
 //Let's try to print v[0] to v[6] as we have inserted 7 elements
 
  1 
  2 
  3 
  6
  7 
  garbage value
  garbage value   //This means elements inserted using push_back are stored in order.
    
   --->so we need to use push_back to insert elements rather than [] for initializing values,
   we can use [] for indexing and updating elements in the indexes  inserted using push_back()
   
   
   
   -->// size function
  cout<<"size:"<< v.size() << endl;   // size function
  
  cout<< v.at(2) << endl;              // prints value 3
  cout<< v.at(6) << endl;              // gives the output, so its better to use at() function
                                           than [] which will get garbage values non existing indexes


   -->//pop() function
   v.pop_back();                      //this function removes the element inserted at the last    
   
   
   -->//capacity() function
   v.capacity();                    //starts with 1 element when 1st element is inserted 
                                      keeps increasing into double when reaches its capacity
   
   
